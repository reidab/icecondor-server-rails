<h3>Define a GeoFence. </h3>
<p>
  <form action="<%=fences_path%>" method="post" onsubmit="return presave(this)">
    New Fence Name: <input name="fence[name]" /> <br/>
    <input type="submit" value="Save">
    <span id="count">0</span> points. <br/>
    Click on the map at the corners of the area to be fenced. <br/>
  </form>
</p>

<!-- Google Maps -->
<div id="map_canvas" style="width: 90%; height: 500px; margin-left:auto; margin-right: auto"></div>

<script src="http://maps.google.com/maps/api/js?v=3&sensor=false"
        type="text/javascript"></script>

<script type="text/javascript">
 document.observe("dom:loaded",mapstart);
 var fencePoints = [];
 var fencePoly;
 var handleMoveListener;
 var mapMoveListener;

 google.maps.Polygon.prototype.push = function(latlng) {
   var new_points = this.getPath();
   var new_len = new_points.push(latlng);
   this.setPath(new_points);
   this.addHandle(latlng, new_len-1);
 }

 google.maps.Polygon.prototype.addHandle = function(latlng, idx) {
   var cops = { center : latlng,
                radius : 35,
                map : this.getMap() }
   var handle = new google.maps.Circle(cops)
   handle.polyFenceIndex = idx;   
   google.maps.event.addListener(handle, 'mousedown', handle.mouseDown);
   google.maps.event.addListener(handle, 'mouseup', handle.mouseUp);
   this.handles.push(handle);
 }

 google.maps.Circle.prototype.mouseDown = function(event, pidx) {
  console.log("down on "+this.polyFenceIndex);
  this.getMap().setOptions({draggable: false});
  handleMoveListener = google.maps.event.addListener(this, 'mousemove', this.handleMove);
 }

 google.maps.Circle.prototype.mouseUp = function(event) {
  console.log("up on "+this.polyFenceIndex);
  this.getMap().setOptions({draggable: true});
  google.maps.event.removeListener(handleMoveListener);
 }

 google.maps.Circle.prototype.handleMove = function(event) {
  this.setCenter(event.latLng);
  var new_points = fencePoly.getPath();
  new_points.setAt(this.polyFenceIndex, event.latLng);
  fencePoly.setPath(new_points);
 }

 google.maps.Polygon.prototype.handleClick = function(event) {
  console.log("move");
 }

 function mapstart() {
    var latlng = new google.maps.LatLng(
       <% if current_user.locations.count > 0 %>
         <%= current_user.locations.last.latitude%>, <%= current_user.locations.last.longitude %>
       <% else %>
         45.586, -122.668
       <% end %>
       );
    var myOptions = {
      zoom: 13,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    var map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

  fencePoly = new google.maps.Polygon({
    strokeColor: "#FF0000",
    strokeOpacity: 0.8,
    strokeWeight: 2,
    fillColor: "#FF0000",
    fillOpacity: 0.35,
    map: map
  });
  fencePoly.handles = [];

  google.maps.event.addListener(map, 'click', mapClick);
  google.maps.event.addListener(fencePoly, 'click', mapClick);
 }

 function mapClick(event) {
   fencePoly.push(event.latLng);
   document.getElementById("count").innerHTML=""+fencePoints.length;
 }


 function presave(form) {
   for(var i=0; i<fencePoints.length; i++) {
     form.appendChild(new Element('input', 
                                  {'name':'points[]', 
                                   'value':''+fencePoints[i].lng()+','+fencePoints[i].lat()+','+"0",
                                   'style':'display:none'}));
   }
 }
</script>

